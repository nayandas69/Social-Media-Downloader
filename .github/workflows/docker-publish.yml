name: Build and Publish Docker Image

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    name: Build, Tag, and Publish Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies to read version
        run: pip install toml

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Check if Git tag exists
        id: check_tag
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          if git ls-remote --tags origin | grep "refs/tags/$VERSION$"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create Git tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$VERSION"
          git push origin "$VERSION"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/social-media-downloader
          VERSION=${{ steps.get_version.outputs.version }}
          docker build -t $IMAGE_NAME:$VERSION .
          docker push $IMAGE_NAME:$VERSION
          